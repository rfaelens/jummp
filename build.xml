<project name="jummp" default="test-app">
    <property environment="env"/>
    <import file="${env.GRAILS_HOME}/src/grails/grails-macros.xml" />

    <!-- Sets the gant environment -->
    <taskdef name="gant" classname="org.codehaus.gant.ant.Gant">
        <classpath>
            <pathelement location="${env.GRAILS_HOME}/lib/gant_groovy1.7-1.9.2.jar"/>
            <pathelement location="${env.GRAILS_HOME}/lib/groovy-all-1.7.5.jar"/>
        </classpath>
    </taskdef>

<!-- Target to execute the testing of one plugin. Used by antcall from test-plugins -->
    <target name="test-plugin">
        <echo message="Running tests for Plugin ${plugin}"/>
        <grails command="test-app" args="-xml ${coverage}" cwd="${basedir}/jummp-plugins/jummp-plugin-${plugin}"/>
        <copy todir="${basedir}/target/test-reports">
            <fileset dir="${basedir}/jummp-plugins/jummp-plugin-${plugin}/target/test-reports">
                <include name="TEST-*.xml"/>
            </fileset>
        </copy>
    </target>

<!-- Runs test-app in all plugins (except JMS) -->
    <target name="test-plugins">
        <antcall target="test-plugin">
            <param name="plugin" value="configuration"/>
        </antcall>
        <antcall target="test-plugin">
            <param name="plugin" value="core-api"/>
        </antcall>
        <antcall target="test-plugin">
            <param name="plugin" value="git"/>
        </antcall>
        <antcall target="test-plugin">
            <param name="plugin" value="sbml"/>
        </antcall>
        <antcall target="test-plugin">
            <param name="plugin" value="security"/>
        </antcall>
        <antcall target="test-plugin">
            <param name="plugin" value="subversion"/>
        </antcall>
<!-- Do not test jms plugin as it requires an instance of jummp running   -->
    </target>

<!-- Runs test-app in the core application -->
    <target name="test-core">
        <grails command="test-app" args="-xml ${coverage}" cwd="${basedir}"/>
    </target>

<!-- Generates the test reports for all tests -->
    <target name="generate-report">
        <junitreport todir="${basedir}/target/test-reports">
            <fileset dir="${basedir}/target/test-reports">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${basedir}/target/test-reports/html"/>
        </junitreport>
    </target>

<!-- Sets the required properties for normal test runs -->
    <target name="prepare-test-app">
        <property name="coverage" value=""/>
    </target>

<!-- Runs all tests (without code coverage)  -->
    <target name="test-app" depends="prepare-test-app, test-core, test-plugins, generate-report">
    </target>

<!-- Sets the required properties for code coverage generation -->
    <target name="prepare-coverage">
        <property name="coverage" value="-coverage"/>
    </target>

<!-- Runs all tests with code coverage -->
    <target name="coverage" depends="prepare-coverage, test-core, test-plugins, generate-report">
        <grails command="coverage-report" cwd="${basedir}"/>
    </target>
</project>
